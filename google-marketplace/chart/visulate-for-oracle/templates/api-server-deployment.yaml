---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-{{ .Values.apiServer.label }}
spec:
  replicas: {{ .Values.apiServer.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-{{ .Values.apiServer.label }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-{{ .Values.apiServer.label }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-{{ .Values.apiServer.label }}
          image: "{{ .Values.apiServer.image.registry }}/{{ .Values.apiServer.image.repository }}:{{ .Values.apiServer.image.tag }}"
          volumeMounts:
            - name: config-database-volume
              mountPath: /visulate-server/config/database.js
              subPath: database.js
            - name: logfiles
              mountPath: /visulate-server/logs
          ports:
            - containerPort: {{ .Values.apiServer.port }}
          env:
            - name: CORS_ORIGIN_WHITELIST
              value: "{{ .Values.corsOriginWhitelist }}"
          readinessProbe:
            httpGet:
              path: /api/
              port: {{ .Values.apiServer.port }}
            initialDelaySeconds: 20
        - name: access-log
          image: "{{ .Values.apiServer.image.registry }}/{{ .Values.apiServer.image.repository }}:{{ .Values.apiServer.image.tag }}"
          args: [/bin/sh, -c, 'tail -n+1 -f /visulate-server/logs/access.log']
          volumeMounts:
            - name: logfiles
              mountPath: /visulate-server/logs
        - name: message-log
          image: "{{ .Values.apiServer.image.registry }}/{{ .Values.apiServer.image.repository }}:{{ .Values.apiServer.image.tag }}"
          args: [/bin/sh, -c, 'tail -n+1 -f /visulate-server/logs/combined.log']
          volumeMounts:
            - name: logfiles
              mountPath: /visulate-server/logs
      volumes:
        - name: config-database-volume
          secret:
            secretName: {{ .Release.Name }}-database-js
        - name: logfiles
          emptyDir: {}
